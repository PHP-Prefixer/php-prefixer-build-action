name: PHP-Prefixer
author: PHP Prefixer <team@php-prefixer.com>
description: 'Prefix PHP libraries and projects. PHP-Prefixer is a service to apply vendor prefixes to Composer namespaces, traits & more.'

inputs:
  personal_access_token:
    description: 'The PHP-Prefixer PAT/Personal Access Token. The token must be configured in the PHP-Prefixer account. Example: `789|1234567890123456789012345678901234567890`.'
    required: true
  project_id:
    description: 'The project ID to process the source code. The project must be configured in your account in the PHP-Prefixer account. Example: `5123`.'
    required: true
  repository:
    description: 'Repository name with owner. For example, actions/checkout'
    default: ${{ github.repository }}
    required: false
  ref:
    description: >
      The branch, tag or SHA to checkout. When checking out the repository that
      triggered a workflow, this defaults to the reference or SHA for that
      event.  Otherwise, uses the default branch.
    required: false
  token:
    description: >
      Personal access token (PAT) used to fetch the repository. The PAT is configured
      with the local git config, which enables your scripts to run authenticated git
      commands. The post-job step removes the PAT.


      We recommend using a service account with the least permissions necessary.
      Also when generating a new PAT, select the least scopes necessary.


      [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
    default: ${{ github.token }}
    required: false
  ssh-key:
    description: >
      SSH key used to fetch the repository. The SSH key is configured with the local
      git config, which enables your scripts to run authenticated git commands.
      The post-job step removes the SSH key.


      We recommend using a service account with the least permissions necessary.


      [Learn more about creating and using
      encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
    required: false
  ssh-known-hosts:
    description: >
      Known hosts in addition to the user and global host key database. The public
      SSH keys for a host may be obtained using the utility `ssh-keyscan`. For example,
      `ssh-keyscan github.com`. The public key for github.com is always implicitly added.
    required: false
  ssh-strict:
    description: >
      Whether to perform strict host key checking. When true, adds the options `StrictHostKeyChecking=yes`
      and `CheckHostIP=no` to the SSH command line. Use the input `ssh-known-hosts` to
      configure additional hosts.
    default: "true"
    required: false
  persist-credentials:
    description: 'Whether to configure the token or SSH key with the local git config'
    default: "true"
    required: false
  lfs:
    description: 'Whether to download Git-LFS files'
    default: "false"
    required: false
  submodules:
    description: >
      Whether to checkout submodules: `true` to checkout submodules or `recursive` to
      recursively checkout submodules.


      When the `ssh-key` input is not provided, SSH URLs beginning with `git@github.com:` are
      converted to HTTPS.
    default: "false"
    required: false

runs:
  using: 'docker'
  image: 'Dockerfile'

branding:
  icon: 'package'
  color: 'blue'
